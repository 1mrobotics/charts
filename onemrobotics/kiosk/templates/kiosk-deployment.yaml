apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.kiosk.name }}
  labels:
    {{- include "kiosk.selectorLabels" . | nindent 6 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate  
  selector:
    matchLabels:
      {{- include "kiosk.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kiosk.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.kiosk.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: local-share
          persistentVolumeClaim:
            claimName: local-share
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - image: "{{ .Values.kiosk.image.repository }}:{{ .Values.kiosk.image.tag }}"
          imagePullPolicy: "{{ .Values.kiosk.image.pullPolicy }}"
          name: "{{ .Values.kiosk.name }}"
          env:
            - name: REACT_APP_API_URL
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: react.appUrl
            - name: REACT_APP_ENTRY_METHOD
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: react.entry.method
            - name: REACT_APP_DEFAULT_LANGUAGE
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: react.default.language
            - name: REACT_APP_SHIPPING_CODE
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: react.shippingCode
            - name: REACT_APP_CLIENT
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: react.client
            - name: REACT_APP_LOGGING_URL
              value: "http://192.168.11.1:9880"
          ports:
            - containerPort: 3000
              hostIP: 192.168.11.1
              hostPort: 3000
        - image: "{{ .Values.kioskLoader.image.repository }}:{{ .Values.kioskLoader.image.tag }}"
          imagePullPolicy: "{{ .Values.kioskLoader.image.pullPolicy }}"
          name: "{{ .Values.kioskLoader.name }}"
          volumeMounts:
            - mountPath: /var/lib/docker
              name: local-share
              subPath: kiosk-loader/docker
            - mountPath: /networking
              name: local-share
              subPath: networking
          env:
            - name: DOCKER_IMAGE
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: docker.image
            - name: DOCKER_USER
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: docker.user
            - name: DOCKER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: docker.password
            - name: SWITCH_MGMT_IP
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: switch.mgmt.ip
            - name: SWITCH_LOGIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kiosk-cm
                  key: switch.login.password
          securityContext:
            privileged: true
          ports:
            # NFS
            - containerPort: 2049
              hostIP: 192.168.11.1
              hostPort: 22049
