apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.orchestrator.name }}
  labels:
    {{- include "orchestrator.selectorLabels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.orchestrator.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate  
  selector:
    matchLabels:
      {{- include "orchestrator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "orchestrator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.orchestrator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: true
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: dev
          hostPath:
            path: /dev
            type: Directory
        - name: cert
          hostPath:
            path: /cert
            type: DirectoryOrCreate
        - name: config
          emptyDir: {}
        - name: local-share
          persistentVolumeClaim:
            claimName: local-share
      terminationGracePeriodSeconds: 61
      initContainers:
        - name: fix-dns
          image: "{{ .Values.fixdns.image.repository }}:{{ .Values.fixdns.image.tag }}"
          imagePullPolicy: "{{ .Values.fixdns.image.pullPolicy }}"
        - name: config-loader
          image: "{{ .Values.configLoader.image.repository }}:{{ .Values.configLoader.image.tag }}"
          imagePullPolicy: "{{ .Values.configLoader.image.pullPolicy }}"
          volumeMounts:
          - mountPath: /target
            name: config
          env:
          - name: ARTIFACT_URL
            value: "{{ .Values.configLoader.artifact_url }}"
          - name: ARTIFACT_ROOT
            value: "serial/{{ .Values.configLoader.serial }}"
      containers:
        - name: {{ .Chart.Name }}
          command: [ "dotnet" ]
          args: [ "Orchestrator.dll" ]
          securityContext:
            {{- toYaml .Values.orchestrator.securityContext | nindent 12 }}
          image: "{{ .Values.orchestrator.image.repository }}:{{ .Values.orchestrator.image.tag }}"
          volumeMounts:
            - mountPath: /dev
              name: dev
            - mountPath: /cert
              name: cert
            - mountPath: /config
              name: config
            - mountPath: /var/run/chrome-driver
              name: local-share
              subPath: chrome-driver
          ports:
            - containerPort: 8083
              hostIP: 192.168.12.1
              hostPort: 8083
            - containerPort: 3231
              hostIP: 192.168.12.1
              hostPort: 3231
              protocol: UDP
          imagePullPolicy: {{ .Values.orchestrator.image.pullPolicy }}
          resources:
            {{- toYaml .Values.orchestrator.resources | nindent 12 }}
          env:
            - name: LWMS_URL
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: lwms.url
            - name: SOLARIS_URL
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: solaris.url
            - name: LB_V1
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: antares.version.one
            - name: SECRET_EVENT_HUBS_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: EventHubsConnection
            - name: SECRET_BLOB_STORAGE_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: BlobStorageConnection
            - name: SECRET_COSMOS_DB_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: CosmosDbConnection
            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: Auth0Domain
            - name: SECRET_AUTH0_INTERNAL_API_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: Auth0InternalApiClientId
            - name: SECRET_AUTH0_INTERNAL_API_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: Auth0InternalApiClientSecret
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: AzureClientId
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: AzureClientSecret
            - name: AZURE_SUBSCRIPTION_ID
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: AzureSubscriptionId
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: key-vault-secret
                  key: AzureTenantId
            - name: KIOSK_ORIGIN
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: kiosk.origin
            - name: ASPNETCORE_URLS
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: orchestrator.url
            - name: ENVIRONMENT_NAME
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: env.name
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: asp.env
            - name: ANTARES_HWCONFIG_PATH
              value: "/config"
            - name: ANTARES_CHROME_DRIVER_DIR
              value: "/var/run/chrome-driver"
            - name: LC_ALL
              value: C.UTF-8
            - name: SECRET_POSTGRESQL_CONNECTION
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: postgresql.connection
            - name: TWO_STOCK_SIDES
              valueFrom:
                configMapKeyRef:
                  name: antares-cm
                  key: antares.two.sides
